[{"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\index.js":"1","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\App.js":"2","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Header.js":"3","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Footer.js":"4","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Recipes.js":"5","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Recipe.js":"6","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Main.js":"7","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\SingleRecipe.js":"8","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\NewPost.js":"9","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\clientManagement.js":"10","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\client.js":"11"},{"size":198,"mtime":1608546875819,"results":"12","hashOfConfig":"13"},{"size":489,"mtime":1609858543679,"results":"14","hashOfConfig":"13"},{"size":1534,"mtime":1609835442680,"results":"15","hashOfConfig":"13"},{"size":581,"mtime":1608647639565,"results":"16","hashOfConfig":"13"},{"size":1364,"mtime":1609858572839,"results":"17","hashOfConfig":"13"},{"size":2022,"mtime":1609858667959,"results":"18","hashOfConfig":"13"},{"size":280,"mtime":1609144641662,"results":"19","hashOfConfig":"13"},{"size":3974,"mtime":1609863212427,"results":"20","hashOfConfig":"13"},{"size":6403,"mtime":1609858408579,"results":"21","hashOfConfig":"13"},{"size":232,"mtime":1609863612705,"results":"22","hashOfConfig":"13"},{"size":194,"mtime":1609863742310,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1d4f15l",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\index.js",[],["52","53"],"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\App.js",[],"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Header.js",["54"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport NewPost from './NewPost';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Header() {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    return(  \r\n        <div style=\r\n            {{\r\n                width: '100vw', \r\n                height: \"150px\", \r\n                background: 'rgb(208,133,210)', \r\n                background: 'linear-gradient(132deg, rgba(208,133,210,1) 29%, rgba(255,218,242,0.9139005944174545) 100%)', \r\n                margin: '10px', \r\n                boxSizing: 'border-box', \r\n                paddingLeft: '24px', \r\n                paddingRight: '24px'\r\n                \r\n            }}>\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:ital@0;1&display=swap\" rel=\"stylesheet\" />\r\n            \r\n            <header>\r\n                <h1 style={{fontFamily: 'Playfair Display' }}>Cecilias matblogg</h1>\r\n                <h4 style={{fontFamily: 'Playfair Display' }}> -mina b채sta samlade recept</h4>\r\n                <Button variant=\"contained\" onClick={() => setModalOpen(true)}>L채gg till nytt recept</Button>\r\n                <Link to='./newRecipe' variant=\"contained\" onClick={() => setModalOpen(true)}>L채gg till nytt recept</Link>\r\n            </header>\r\n            {modalOpen && <NewPost setModalOpen={setModalOpen} modalOpen={modalOpen} /> }\r\n        </div>\r\n    )\r\n}","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Footer.js",["55"],"import React from 'react';\r\nimport RestaurantMenuIcon from '@material-ui/icons/RestaurantMenu';\r\n\r\n\r\nexport default function Footer() {\r\n    return(\r\n        <div style={{width: '100vw', height: '200px', display: \"flex\", background: '#b4b4b4', marginTop: '20px' }}>\r\n            <div  style={{display: \"flex\", alignItems: \"center\", display: \"flex\", flexDirection: 'column', justifyContent: \"center\", alignSelf: \"left\"}}>\r\n            <h1>Cecilias matblogg </h1>\r\n            <RestaurantMenuIcon style={{height: \"50px\", width: \"30%\"}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Recipes.js",[],"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Recipe.js",["56","57","58","59","60","61"],"import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 345,\r\n    //   maxWidth: 345,\r\n      padding: \"20px\",\r\n      boxSizing: 'border-box',\r\n      margin: '10px',\r\n      \r\n      \r\n    },\r\n    media: {\r\n      height: 300,\r\n    },\r\n  });\r\n\r\nexport default function Recipe( recipes ){\r\n    const classes = useStyles();\r\n    const {title, desciption, foodImage, ingredients, category} = recipes.recipe.fields;\r\n    console.log(recipes)\r\n    function onClickCard(e){\r\n        e.preventDefault();\r\n        <Link to='/singleRecipe' recipes={recipes} ></Link>\r\n    }\r\n\r\n    return(\r\n        <Card className={classes.root} >\r\n            <CardActionArea style={{ borderRadius: '1rem'}}>\r\n                <CardMedia \r\n                    className={classes.media}\r\n                    component=\"img\"\r\n                    src={foodImage.fields.file.url}\r\n                    alt={title}\r\n                    title={title}\r\n                    style={{width: \"300px\", height: \"300px\", objectFit:\"cover\", objectPosition: \"center\", margin: '0px', borderRadius: '1rem'}}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{title}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Link to={{pathname: `/singleRecipe/${title}`, params: {recipes}}}  size=\"small\" color=\"primary\" >\r\n                    G책 till recept\r\n                </Link>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\Main.js",[],"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\SingleRecipe.js",["62","63","64"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { client } from \"../client\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 900,\r\n        padding: \"20px\",\r\n        boxSizing: 'border-box',\r\n        margin: '10px',\r\n    },\r\n    media: {\r\n        width: \"300px\", \r\n        height: \"300px\",\r\n        objectFit:\"cover\", \r\n        objectPosition: \"center\", \r\n        margin: '0px', \r\n        borderRadius: '1rem',\r\n        display: 'inline-block'\r\n    },\r\n    innerContainer: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    }\r\n});\r\n\r\nexport default function SingleRecipe() { \r\n    console.log(window.location.pathname.split('/')[2]);\r\n    // console.log(recipes)\r\n    const [fetchRecipe, setFetchRecipe] = useState(window.location.pathname.split('/')[2]);\r\n    const classes = useStyles();\r\n    const [recipe, setRecipe] = useState();\r\n\r\n    const fetchMyAPI = useCallback(async () => {\r\n        let respons = await client.getEntries({\r\n                    'content_type': \"recipe\",\r\n                    'fields.title[in]': fetchRecipe\r\n                })\r\n                // respons = await respons.json()\r\n        setRecipe(respons.items[0].fields)\r\n        \r\n      }, [])\r\n\r\n      useEffect(() => {\r\n        fetchMyAPI()\r\n      }, [])\r\n\r\n    // useEffect(() => {\r\n    //     client.getEntries({\r\n    //         'content_type': \"recipe\",\r\n    //         'fields.title[in]': fetchRecipe\r\n    //     })\r\n    //     .then((res) => {\r\n    //         setRecipe(res.items[0].fields)\r\n    //     })\r\n    // }, [])\r\n\r\n   \r\n    if(recipe){\r\n        return(\r\n            <div className=\"outerContainter\">\r\n                <Header />\r\n                <div className={classes.innerContainer}>\r\n                <Card className={classes.root} tag=\"div\">\r\n                <CardActionArea style={{ borderRadius: '1rem'}}>\r\n                <CardMedia \r\n                    className={classes.media}\r\n                    component=\"img\"\r\n                    src={recipe.foodImage.fields.file.url}\r\n                    alt={recipe.title}\r\n                    title={recipe.title}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{recipe.title}</Typography>\r\n                    {recipe.ingredients.map((ingredient, index) => {\r\n                        return(\r\n                            <Typography key={index} variant=\"body2\" color=\"textSecondary\">\r\n                            {ingredient}\r\n                            </Typography>\r\n                        )\r\n                    })}\r\n                    <Typography>  \r\n                        {recipe.category.map((cat, index )=>{\r\n                            return(\r\n                                <p key={index}>{cat.fields.title}</p>\r\n                            )\r\n                        })}\r\n                    </Typography> \r\n\r\n                    <Typography>{recipe.desciption}</Typography>\r\n                </CardContent>\r\n            </CardActionArea> \r\n            <CardActions>\r\n                <Link to=\"/\" size=\"small\" color=\"primary\">\r\n                    <Button variant=\"contained\">Tillbaka till f철rsta sidan</Button>\r\n                </Link>\r\n            </CardActions> \r\n        </Card>\r\n        </div>\r\n        <Footer />\r\n        </div>\r\n        )\r\n    }\r\n    return(\r\n    <p>wait...</p>\r\n    )\r\n}","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\components\\NewPost.js",["65","66","67","68","69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {clientManagement} from '../clientManagement';\r\nimport * as contentful from \"contentful\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Checkbox, FormGroup } from \"@material-ui/core\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { client } from \"../client\";\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        position: \"absolute\", \r\n        top: 'calc(50% - 350px)', \r\n        left: 'calc(50% - 450px)', \r\n        backgroundColor: '#F2F2F2', \r\n        listStyle: 'none', \r\n        cursor: 'pointer',\r\n        width: '900px',\r\n        height: '700px',\r\n        borderRadius:'5px',\r\n        flexDirection: 'column',\r\n        boxSizing: 'border-box',\r\n        padding: '10px'\r\n      },\r\n    },\r\n    button: {\r\n        width: '150px',\r\n        height: '50px',\r\n        margin: '10px',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    formGroup: {\r\n        width: '100%',\r\n        border: '1px solid grey',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n    }\r\n}));\r\n\r\nexport default function NewPost({setModalOpen, modalOpen}) {\r\n    const classes = useStyles();\r\n    const [title, setTitle] = useState('');\r\n    const [ingredient, setIngredient] = useState('');\r\n    const [ingredients, setIngredients] = useState([]);\r\n    const [description, setDiscription] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const [fetchedCategories, setFetchedCategories] = useState([]);\r\n\r\nfunction publishNewRecipe(){\r\n    clientManagement.getSpace('n8h12pdxd08n')\r\n    .then((space) => {\r\n        space.getEnvironment('master')\r\n        .then((environment) => {\r\n            environment.createEntry('recipe', {\r\n                linkType: \"ContentType\", \r\n                id: \"recipe\",\r\n                fields: {\r\n                    title: {\r\n                        'en-US': title\r\n                    },\r\n                    ingredients: {\r\n                        'en-US': ingredients\r\n                    }, \r\n                    desciption: {\r\n                        'en-US': description\r\n                    },\r\n                    category: {\r\n                        'en-US': categories.map((categ) =>({\r\n                            sys:{\r\n                                type: 'Link',\r\n                                linkType: 'Entry',\r\n                                id: categ.sys.id\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n        })       \r\n    })\r\n}\r\n\r\n    function onSave(e){\r\n        e.preventDefault();\r\n        publishNewRecipe();\r\n        setModalOpen(false)\r\n    }\r\n\r\n    const addAnotherIngredient = (e) => {\r\n        e.preventDefault();\r\n        if(ingredient){\r\n            setIngredients([...ingredients, ingredient]);\r\n            setIngredient('');\r\n        } \r\n        return\r\n    }\r\n\r\n    const removeIngredient = (e) => {\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        client.getEntries({\r\n            'content_type': \"category\"\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            setFetchedCategories(res.items)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const handleCategory = (e, id, category) => {\r\n        setCategories([...categories, category ]);\r\n    }\r\n\r\n    return ReactDOM.createPortal((\r\n        <div className={classes.root} >\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n            <header>\r\n                <h3>L채gg in ett nytt recept</h3>\r\n            </header>\r\n            <TextField required id=\"receptnamn\" label=\"Receptnamn\" variant=\"outlined\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                <ul>\r\n                    {ingredients.map((ing, index) => {\r\n                        return(\r\n                            <li key={index}>{ing}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            <TextField required id=\"ingredient\" label=\"Ingrediens\" variant=\"outlined\" value={ingredient} onChange={(e) => setIngredient(e.target.value)}/>\r\n            <Button className={classes.button} onClick={ addAnotherIngredient } variant=\"contained\">L채gg till ny ingrediens</Button>\r\n            <TextareaAutosize required aria-label=\"minimum height\" rowsMin={10} rowsMax={10}placeholder=\"Beskrivning\" value={description} onChange={(e) => setDiscription(e.target.value)} />\r\n            <FormControl component=\"fieldset\" className={classes.formControl} style={{display:'block'}}>\r\n                <FormLabel component=\"legend\">V채lj kategori</FormLabel>\r\n                {fetchedCategories.map((cat, id) => {\r\n                    return(\r\n                        <FormControlLabel key={cat.fields.id} control={\r\n                            <Checkbox onChange={(e) => handleCategory(e, id, cat)}  />} \r\n                            name={cat.fields.title} label={cat.fields.title} \r\n                        />\r\n                    )\r\n                })}\r\n                <FormHelperText>V채lj en eller flera kategorier</FormHelperText>\r\n            </FormControl>\r\n            <div style={{display:'block'}}>\r\n                <Button className={classes.button} onClick={ onSave } variant=\"contained\">Spara</Button>\r\n                <Button className={classes.button} onClick={ () => setModalOpen(false) } variant=\"contained\">St채ng</Button>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    ), document.body);\r\n}","C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\clientManagement.js",[],"C:\\Users\\cissi\\CMS\\Projekt\\myapp\\src\\client.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":14,"column":17,"nodeType":"77","messageId":"78","endLine":14,"endColumn":27},{"ruleId":"75","severity":1,"message":"79","line":8,"column":66,"nodeType":"77","messageId":"78","endLine":8,"endColumn":73},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"85","line":28,"column":19,"nodeType":"82","messageId":"83","endLine":28,"endColumn":29},{"ruleId":"80","severity":1,"message":"86","line":28,"column":42,"nodeType":"82","messageId":"83","endLine":28,"endColumn":53},{"ruleId":"80","severity":1,"message":"87","line":28,"column":55,"nodeType":"82","messageId":"83","endLine":28,"endColumn":63},{"ruleId":"80","severity":1,"message":"88","line":30,"column":14,"nodeType":"82","messageId":"83","endLine":30,"endColumn":25},{"ruleId":"80","severity":1,"message":"89","line":44,"column":25,"nodeType":"82","messageId":"83","endLine":44,"endColumn":39},{"ruleId":"90","severity":1,"message":"91","line":56,"column":10,"nodeType":"92","endLine":56,"endColumn":12,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":60,"column":10,"nodeType":"92","endLine":60,"endColumn":12,"suggestions":"95"},{"ruleId":"80","severity":1,"message":"96","line":4,"column":13,"nodeType":"82","messageId":"83","endLine":4,"endColumn":23},{"ruleId":"80","severity":1,"message":"97","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":16},{"ruleId":"80","severity":1,"message":"98","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":14},{"ruleId":"80","severity":1,"message":"99","line":12,"column":8,"nodeType":"82","messageId":"83","endLine":12,"endColumn":18},{"ruleId":"80","severity":1,"message":"100","line":13,"column":20,"nodeType":"82","messageId":"83","endLine":13,"endColumn":29},{"ruleId":"80","severity":1,"message":"101","line":121,"column":11,"nodeType":"82","messageId":"83","endLine":121,"endColumn":27},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","Duplicate key 'display'.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'desciption' is assigned a value but never used.","'ingredients' is assigned a value but never used.","'category' is assigned a value but never used.","'onClickCard' is defined but never used.","'setFetchRecipe' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'fetchRecipe'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'fetchMyAPI'. Either include it or remove the dependency array.",["105"],"'contentful' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormGroup' is defined but never used.","'removeIngredient' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [fetchRecipe]",{"range":"110","text":"111"},"Update the dependencies array to be: [fetchMyAPI]",{"range":"112","text":"113"},[1806,1808],"[fetchRecipe]",[1869,1871],"[fetchMyAPI]"]